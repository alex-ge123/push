server:
  port: 5200
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    # 不要设置过大，如果过大，启动项目会报错：打开文件数过多
    io-threads: 4
    # 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
    # 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
    worker-threads: 32

push:
  service:
    # 部署模式是否集群部署
    #   false：单个部署
    #     业务服务调用推送服务Rest接口发布WebSocket消息。
    #   true：集群部署（需要Redis、RabbitMQ支持）
    #     客户端连接成功后，往redis中存储终端id与当前服务ip:port对应关系，
    #     业务服务通过mq发消息，推送服务监听消费消息，
    #     在缓存中查找终端id对应的推送服务ip:port，对应当前推送服务发布WebSocket消息。
    cluster: true

spring:
  application:
    name: virsical-push
  profiles:
    active: dev
  # 集群模式部署，需要redis
  redis:
    password: wafer123
    host: localhost
    port: 6379
    database: 1
  # 集群模式部署，需要rabbitmq
  rabbitmq:
    host: 192.168.0.68
    port: 5672
    username: admin
    password: admin

logging:
  level:
    root: info
